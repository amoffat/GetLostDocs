{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Get Lost Docs","text":"<p>\ud83d\udc4b Welcome to the Get Lost platform dev documentation. This will serve as your reference for all things required to build levels for Get Lost.</p>"},{"location":"#just-want-to-play","title":"Just want to play?","text":"<p>Are you here by mistake and just want to play Get Lost?</p> <p>Play (Coming soon) </p>"},{"location":"#new-to-get-lost","title":"New to Get Lost?","text":"<p>If this is your first time here, please take a moment to learn about the vision.</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>So you want to build a level? You'll probably first want to start with starting your development environment.</p>"},{"location":"#feedback","title":"Feedback","text":"<p>This documentation is constantly evolving. If you have any specific requests, please voice them on Discord.</p> <p>Join the Discord </p>"},{"location":"about/","title":"\u2139\ufe0f What is Get Lost?","text":"<p>Get Lost is an engine, a platform, and a web game. The goal is to make it easy for creators to tell stories within a larger game experience. Creators make self-contained levels and then publish those levels into the Get Lost Multiverse (1). Players can then play those levels on their journey through the game.</p> <ol> <li>The Get Lost Multiverse is the total collection of all levels in Get Lost. Levels in the Multiverse are connected so that an exit of one level attaches to the entry of another level. Learn more</li> </ol>"},{"location":"about/#the-vision","title":"\u2728 The vision","text":"<p>The vision of Get Lost is to connect creative people in a new way, using a collaborative game, to create a rich experience for players.</p>"},{"location":"about/#what-it-is","title":"\u2705 What it is","text":"<ul> <li>A premade framework for creating levels in a larger connected game</li> <li>A place for artists to tell stories and showcase their talents</li> <li>A place for artists to collaborate together to create a larger experience</li> <li>A dynamic story that grows and changes based on the contributions from individual levels</li> <li>An evolving multiverse with levels changing and appearing all the time</li> </ul>"},{"location":"about/#what-it-is-not","title":"\u274c What it is not","text":"<ul> <li>A game-making framework</li> <li>A static game with set levels</li> <li>A pre-defined story or narrative</li> <li>A collection of separate mini-games</li> <li>A crypto or NFT project</li> <li>A place for AI slop</li> </ul>"},{"location":"about/#the-pieces","title":"The pieces","text":""},{"location":"about/#the-engine","title":"\u2699\ufe0f The engine","text":"<p>The Get Lost engine provides all of the fundamental gameplay features like physics, sounds, controls, item inventory, tileset loading, etc... everything to make the level development and game experience run smoothly. As a creator, your interaction with the engine will be through the minimal code that you may choose to write for your level. For example, to play a sound, or to start a dialogue with an NPC. Other than that, the engine is mostly hidden from you.</p>"},{"location":"about/#the-platform","title":"\ud83e\udde9 The platform","text":"<p>The platform is what lets creators publish their level into the Get Lost Multiverse so that people on the internet can play it. Once a level has been published, it will be connected to the Get Lost game so that players can visit it as part of their journey. You, as a creator, can continue to tweak the content and evolve the level however you see fit, and your changes will be visible to the players in the game. As you think up new storylines, or create new items, you can add them to your level to enrich the player experience.</p>"},{"location":"about/#the-game","title":"\ud83c\udfae The game","text":"<p>The game is the player's cohesive experience through this multiverse of levels. Every level published by an artist is stitched into the multiverse by connecting it with other levels. And because all levels must have at least 1 entrypoint and at least 2 exits, there will always be more places to visit\u2014no dead ends.</p> <p>There is only one player avatar (1) that moves through levels, and players can make choices in levels that affect their traits. For example, if a player steals money from an NPC, the level may decrease their \"trustworthiness\" trait. Other levels can check this trait and give players different experiences.</p> <p>Items are another way for artists to collaborate across levels. Items that are picked up in one level can be used in other levels. For example, if a fire level gives a player a magic fire wand, and later they find themselves in an ice level, they might be able to melt a frozen door with it.</p> <ol> <li>One player avatar, but several possible variations. </li> </ol>"},{"location":"faq/","title":"\u2753 FAQ","text":""},{"location":"faq/#can-my-level-be-monetized","title":"Can my level be monetized?","text":"<p>Yes. Monetized levels get paid out through Stripe.</p>"},{"location":"faq/#will-there-be-multiplayer","title":"Will there be multiplayer?","text":"<p>No. Get Lost is a single player experience and is not a good fit for multiplayer.</p>"},{"location":"faq/#can-you-add-web3cryptonfts","title":"Can you add web3/crypto/NFTs?","text":"<p>No. There is no place for crypto in Get Lost.</p>"},{"location":"faq/#can-i-make-a-shooterplatformerpuzzleretc-in-get-lost","title":"Can I make a shooter/platformer/puzzler/etc in Get Lost?","text":"<p>The engine is flexible but opinionated. You can make levels with different mechanics, but the further you stray from telling stories, the more difficult it will be to make. The engine is really designed to tell stories, so if you go with that, you'll have the least amount of friction.</p>"},{"location":"faq/#can-i-make-a-level-with-ai","title":"Can I make a level with AI?","text":"<p>You can try, but I don't think you'll get very far. Making a level still requires you to have spatial and visual skills to lay out tiles and setup sensors. If you do manage to make a level with AI, there's a good chance it will be voted down by players due to it feeling inauthentic.</p>"},{"location":"glossary/","title":"Glossary","text":""},{"location":"glossary/#a","title":"A","text":"<p>Animation Frame A single image in a sequence that forms an animation. Frames are displayed in order to create the illusion of movement.</p> <p>Asset Any visual, audio, or data element used in a game, such as sprites, tiles, sound effects, or background music.</p>"},{"location":"glossary/#c","title":"C","text":"<p>Camera A virtual viewpoint that determines what portion of the game world is visible on the screen.</p> <p>Collision Detection The process of determining when two or more objects in a game intersect or come into contact.</p>"},{"location":"glossary/#e","title":"E","text":""},{"location":"glossary/#f","title":"F","text":""},{"location":"glossary/#g","title":"G","text":"<p>Game Loop A continuous cycle that updates the game state and renders graphics, ensuring the game runs consistently and responds to input.</p>"},{"location":"glossary/#l","title":"L","text":"<p>Layering The process of stacking visual elements on top of each other, often used to create depth and organize sprites (e.g., background, character, foreground).</p>"},{"location":"glossary/#p","title":"P","text":"<p>Parallax Scrolling A visual effect where background layers move at different speeds to create a sense of depth and perspective.</p>"},{"location":"glossary/#s","title":"S","text":"<p>Sprite A 2D bitmap image or animation that represents a character, object, or visual effect in a game.</p> <p>Sprite Sheet A single image containing multiple sprites, used to optimize rendering and simplify animation.</p>"},{"location":"glossary/#t","title":"T","text":"<p>Tile A small, reusable image used to create larger game environments. Tiles are placed on a grid to form levels or backgrounds.</p> <p>Tilemap A data structure representing a grid of tiles, used to define a game's environment.</p> <p>Tileset An image of individual tiles, used as a palette when building a level's map. You can buy tileset assets online or make them yourself.</p>"},{"location":"glossary/#v","title":"V","text":"<p>Viewport The visible portion of the game world displayed on the screen.</p>"},{"location":"glossary/#z","title":"Z","text":"<p>Z-Index A value that determines the draw order of objects. Higher values are drawn on top of lower values, creating depth.</p>"},{"location":"monetization/","title":"\ud83d\udcb0 Monetization","text":"<p>A core principle of the Get Lost platform is that artists should be financially supported for their work. To that end, levels can be monetized to receive revenue sharing.</p> <p>TODO</p>"},{"location":"art-assets/music/","title":"\ud83c\udfb6 Music","text":"<ul> <li>Abstraction sketchbook</li> <li>Freesound CC-0 music</li> </ul>"},{"location":"art-assets/sound-effects/","title":"\ud83d\udd0a Sound Effects","text":"<ul> <li>Free CC-0 sounds</li> </ul>"},{"location":"art-assets/tilesets/","title":"\ud83d\udd37 Tilesets","text":"<p>A tileset is the bread and butter of a Get Lost level. You create a tilemap by placing individual tile sprites that you sample from within a tileset.</p> <p>Itch.io remains the current king for finding affordable and quality tilesets. Use this link to browse some of the most popular ones. But, as with any online collection of assets, you can find real gems if you hunt.</p> <p>Below are some tilesets I have personally purchased and can vouch for. I've listed the full price, but many assets are on sale at different times. Also, many of these assets have limited free versions.</p> <p>Tip</p> <p>Do you have an resource that you want listed here? Make a request in the discord server.</p>"},{"location":"art-assets/tilesets/#interiors","title":"Interiors","text":""},{"location":"art-assets/tilesets/#dungeon","title":"Dungeon","text":"<ul> <li>Fire dungeon - $10</li> <li>Water dungeon - $10</li> </ul>"},{"location":"art-assets/tilesets/#misc","title":"Misc","text":"<ul> <li>Rogue Adventure - $7.99</li> <li>Modern Interiors - $5</li> <li>The Interiors - $10</li> </ul>"},{"location":"art-assets/tilesets/#exteriors","title":"Exteriors","text":""},{"location":"art-assets/tilesets/#desert","title":"Desert","text":"<ul> <li>RPG Desert Pack - $7.50</li> </ul>"},{"location":"art-assets/tilesets/#village","title":"Village","text":"<ul> <li>Harvest Summer - $6</li> </ul>"},{"location":"art-assets/tilesets/#city","title":"City","text":"<ul> <li>Modern Exteriors - $5</li> </ul>"},{"location":"art-assets/tilesets/#farm","title":"Farm","text":"<ul> <li>Tiny Wonder Farm - $5.99</li> </ul>"},{"location":"art-assets/tilesets/#market","title":"Market","text":"<ul> <li>Marketplace - $7.99</li> </ul>"},{"location":"art-assets/tilesets/#swamp","title":"Swamp","text":"<ul> <li>Tiny Wonder Swamp - $4.99</li> </ul>"},{"location":"art-assets/tilesets/#forest","title":"Forest","text":"<ul> <li>Spring Forest - $10</li> <li>Pixel Plains - $6</li> </ul>"},{"location":"reference/multiverse/","title":"\ud83c\udf0c The Multiverse","text":"<p>TODO</p>"},{"location":"reference/special-layers/","title":"\ud83e\uddc5 Special layers","text":"<p>In the Tiled map editor, Get Lost uses special layer names that can have different effects in the engine. For example, if you create a layer named <code>zooms</code>, any primitive object (1) will designate a zoom area. When the player walks through this zoom area, the camera will zoom in or out, based on the properties you've assigned to the primitive object.</p> <ol> <li>A primitive object is a rectangle or ellipse. Arbitrary polygon objects are not yet supported.</li> </ol>"},{"location":"reference/special-layers/#special-layers_1","title":"Special layers","text":""},{"location":"reference/special-layers/#bounds","title":"<code>bounds</code>","text":"<p>The <code>bounds</code> object layer can only contain one object and it must be a rectangle. This rectangle defines an artificial bounds for the camera that the camera will not leave as the player moves.</p> <p>Note</p> <p>Even though the camera will stay inside of the bounds, the player won't. The player can move anywhere where there isn't a collision object.</p> <p>If you don't define a bounds layer, the bounds of the map's tiles will be used instead. So this is useful if you want a camera bounds that is different than that.</p>"},{"location":"reference/special-layers/#collisions","title":"collisions","text":"<p>The <code>collisions</code> layer defines large scale collision objects. You can use any primitive object (including the polygon object) to define a collision object. The objects in this layer will mark an areas that the player or NPC cannot move through. This is useful to block off entire sections of the map, for example, at the map's boundaries, or the edges of bridges.</p>"},{"location":"reference/special-layers/#divider","title":"divider","text":"<p>The <code>divider</code> layer is a somewhat advanced layer. The layer contains should contain no objects. It's purpose is to separate the z-indices of any layers below above the divider from any layers below the divider. This is useful if you have a layer that the player will never walk on, for example, a bridge above the player. Most of the time, you will not need this layer, but when you need it, you'll know.</p>"},{"location":"reference/special-layers/#player","title":"player","text":"<p>The <code>player</code> layer sets the position (x, y) and the base z-index of the player's avatar. It should contain a single rectangle named <code>entry</code>. When your level loads in Get Lost, the player will be placed at the center of this rectangle. Move the rectangle around to where you want the player to start.</p> <p>Everything below the <code>player</code> layer will be permanently below the player on the z-index. This means that the player layer should always sit above the ground layer, because the player will never move underneath the ground. However, everything above the <code>player</code> layer will be evaluated for z-index sorting.</p>"},{"location":"reference/special-layers/#sensors","title":"sensors","text":"<p>The <code>sensors</code> layer defines objects that trigger a sensor call in your level's code.</p>"},{"location":"reference/special-layers/#sounds","title":"sounds","text":""},{"location":"reference/special-layers/#zooms","title":"zooms","text":""},{"location":"reference/special-layers/#layer-groups","title":"Layer groups","text":"<p>Layer groups are useful to logically group together layers based on their contents. They have no functional effect on the Get Lost engine, meaning they won't influence the behavior of the game. It's only for your own personal organization. The only thing they do effect in the engine is the authoritative naming of the layers. When Get Lost loads your Tiled map, it uses the layer names as they're given. Except if the layer is in a group. Then it is prefixed with the group name. For example, a layer named \"trees1\" in the \"trees\" layer group becomes \"trees/trees1\".</p>"},{"location":"tutorials/interaction/creating-sensors/","title":"\ud83d\udce1 Creating Sensors","text":"<p>Sensors are a key facilitator of interactions in a Get Lost level. When the player enters or exits a sensor, you can do things like trigger sounds, text dialogs, exit the level, or adjust some hidden state\u2014whatever you can think of.</p>"},{"location":"tutorials/interaction/creating-sensors/#defining-the-sensor","title":"Defining the sensor","text":"<p>In the Tiled app, make sure you have an Object Layer called <code>sensors</code>. This layer must contain only Tiled shapes (like rectangle or ellipse).</p> <p>TODO</p>"},{"location":"tutorials/map/starting-dev-env/","title":"\ud83d\udcbb Starting development","text":"<p>Get Lost gives you a level template that you can (and should) use to start building levels quickly. It comes with a premade demo map, some sample level code, and public domain assets.</p> <p>There are 3 ways to use the level template, from beginner to advanced:</p> <ul> <li>Using Github Codespaces</li> <li>Running it locally in a VSCode devcontainer</li> <li>Running it locally outside of a devcontainer</li> </ul>"},{"location":"tutorials/map/starting-dev-env/#using-github-codespaces","title":"Using Github Codespaces","text":"<p>Difficulty: easy</p> <p>This is the recommeded way to use the Get Lost level template. You don't need anything installed on your computer... just a web browser and a Github account. Github Codespaces is a way to launch VSCode (and other programs) in the browser, so you can do all of your work in the browser without installing anything locally.</p>"},{"location":"tutorials/map/starting-dev-env/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tutorials/map/starting-dev-env/#the-codespace-takes-forever-to-boot","title":"The codespace takes forever to boot.","text":"<p>If you're not in US-East or US-West, this issue is likely caused by the prebuild cache not being available in your region. The codespace prebuild cache is something that I have to turn on manually per-region, and it accelerates the startup time, at a small cost to me. If you wait long enough, the codespace will boot. However, you can request your region be enabled in our Discord.</p>"},{"location":"tutorials/map/starting-dev-env/#local-devcontainer","title":"Local Devcontainer","text":"<p>Difficulty: medium</p>"},{"location":"tutorials/map/starting-dev-env/#bare-metal-installation","title":"Bare-metal installation","text":"<p>Difficulty: medium</p> <p>This is the most advanced installation process because you need to manage the dependencies yourself. There aren't really too many advantages of this method over the local devcontainer.</p> <p>TODO</p>"},{"location":"tutorials/physics/making-collisions/","title":"\ud83c\udf32 Planting a tree","text":"<p>In this tutorial, we will create a tree that the player can move in front of, behind, and run into. This will demonstrate the physics engine collisions as well as some basic z-sorting concepts.</p> <p>Open up the map you created in the starting development tutorial. We'll use this map and the Pixel Plains assets to plant the tree.</p> <p>In the Tiled app, create a special object layer titled <code>collisions</code>. This layer will hold all of the primitive objects to define</p>"},{"location":"tutorials/sound/area-sound/","title":"\ud83d\udc42 Making an area sound","text":"<p>TODO</p>"},{"location":"tutorials/sound/playing-sound/","title":"\u25b6\ufe0f Playing a sound","text":"<p>TODO</p>"},{"location":"tutorials/sound/walk-sound/","title":"\ud83c\udfc3 Making a walk sound","text":"<p>TODO</p>"}]}